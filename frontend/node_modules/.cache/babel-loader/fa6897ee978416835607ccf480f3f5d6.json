{"ast":null,"code":"var _jsxFileName = \"/Users/personal/codebase/bhyve/frontend/src/hooks/SkillsContext.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SkillsContext = /*#__PURE__*/createContext({\n  skills: []\n});\nexport const SkillProvider = ({\n  children\n}) => {\n  _s();\n\n  const providerValue = useProviderQty();\n  return /*#__PURE__*/_jsxDEV(SkillsContext.Provider, {\n    value: providerValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 10\n  }, this);\n};\n\n_s(SkillProvider, \"BHoehhYIdo1SQ9fpkR2FsG5wZ3Q=\", false, function () {\n  return [useProviderQty];\n});\n\n_c = SkillProvider;\n\nconst useProviderQty = () => {\n  _s2();\n\n  const [skills, setSkills] = useState([]);\n  return [skills, setSkills];\n};\n\n_s2(useProviderQty, \"wwvsxC8gh3GhoCw9B6TzAQLnUxY=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"SkillProvider\");","map":{"version":3,"sources":["/Users/personal/codebase/bhyve/frontend/src/hooks/SkillsContext.tsx"],"names":["React","createContext","useState","SkillsContext","skills","SkillProvider","children","providerValue","useProviderQty","setSkills"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;;AAEA,OAAO,MAAMC,aAAa,gBAAGF,aAAa,CAAC;AACzCG,EAAAA,MAAM,EAAE;AADiC,CAAD,CAAnC;AAIP,OAAO,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA2C;AAAA;;AACtE,QAAMC,aAAa,GAAGC,cAAc,EAApC;AACA,sBAAO,QAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAED,aAA/B;AAAA,cAA+CD;AAA/C;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAHM;;GAAMD,a;UACWG,c;;;KADXH,a;;AAKb,MAAMG,cAAc,GAAG,MAAQ;AAAA;;AAC7B,QAAM,CAACJ,MAAD,EAAQK,SAAR,IAAqBP,QAAQ,CAAM,EAAN,CAAnC;AACA,SAAO,CAACE,MAAD,EAAQK,SAAR,CAAP;AACD,CAHD;;IAAMD,c","sourcesContent":["import React, { createContext, useState } from \"react\";\n\nexport const SkillsContext = createContext({\n  skills: []\n});\n\nexport const SkillProvider = ({ children }:{children:React.ReactNode})=>{\n  const providerValue = useProviderQty();\n  return <SkillsContext.Provider value={providerValue}>{children}</SkillsContext.Provider>;\n};\n\nconst useProviderQty = ():any=>{\n  const [skills,setSkills] = useState<any>([]);\n  return [skills,setSkills];\n};\n"]},"metadata":{},"sourceType":"module"}