{"ast":null,"code":"var _jsxFileName = \"/Users/personal/codebase/bhyve/frontend/src/components/landing/LAccordion.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { accordionData } from \"../../constants/accordionData\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport styles from \"../../assets/scss/landing/lAccordion.module.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LAccordion = () => {\n  _s();\n\n  const [imgSrc, setImgSrc] = useState(\"\");\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleChange = panel => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n\n  useEffect(() => {\n    if (accordionData.length > 0) {\n      setImgSrc(accordionData[0].imgSrc);\n      setExpanded(accordionData[0].id);\n    }\n  }, []);\n\n  const renderAccordions = () => {\n    let accordions = [];\n    let content = [];\n    accordionData.map(accordion => {\n      accordions.push( /*#__PURE__*/_jsxDEV(Accordion, {\n        expanded: expanded === accordion.id,\n        onChange: handleChange(accordion.id),\n        children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n          onClick: () => setImgSrc(accordion.imgSrc),\n          expandIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this),\n          \"aria-controls\": \"panel1bh-content\",\n          id: \"panel1bh-header\",\n          style: {\n            padding: \"0.5rem 1rem\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.accHeader,\n            children: accordion.header\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n          style: {\n            display: \"flex\",\n            alignItems: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: styles.accImg,\n            src: accordion.imgSrc,\n            alt: \"img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.accDescription,\n            children: accordion.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, accordion.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this));\n    });\n    content.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.content,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.accBox,\n        children: accordions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.imgBox,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: styles.contentImg,\n          src: imgSrc,\n          alt: \"img-box\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this));\n    return content;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.main,\n    children: renderAccordions()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LAccordion, \"udA7a6y53XRMUNTUzTVsfU9fLI4=\");\n\n_c = LAccordion;\nexport default LAccordion;\n\nvar _c;\n\n$RefreshReg$(_c, \"LAccordion\");","map":{"version":3,"sources":["/Users/personal/codebase/bhyve/frontend/src/components/landing/LAccordion.tsx"],"names":["React","useEffect","useState","accordionData","Accordion","AccordionSummary","AccordionDetails","ExpandMoreIcon","styles","LAccordion","imgSrc","setImgSrc","expanded","setExpanded","handleChange","panel","event","isExpanded","length","id","renderAccordions","accordions","content","map","accordion","push","padding","accHeader","header","display","alignItems","accImg","accDescription","description","accBox","imgBox","contentImg","main"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { accordionData } from \"../../constants/accordionData\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport styles from \"../../assets/scss/landing/lAccordion.module.scss\";\n\nconst LAccordion = ()=>{\n  const [imgSrc,setImgSrc] = useState(\"\");\n  const [expanded, setExpanded] = React.useState<string | false>(false);\n\n  const handleChange = (panel: string) => (event: React.ChangeEvent<{}>, isExpanded: boolean) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n\n  useEffect(()=>{\n    if(accordionData.length > 0){\n      setImgSrc(accordionData[0].imgSrc);\n      setExpanded(accordionData[0].id);\n    }\n  },[]);\n\n  const renderAccordions = ()=>{\n    let accordions:any[] = [];\n    let content:any = [];\n    accordionData.map((accordion)=>{\n      accordions.push(\n        <Accordion expanded={expanded === accordion.id} onChange={handleChange(accordion.id)} key={accordion.id}>\n          <AccordionSummary\n            onClick={()=>setImgSrc(accordion.imgSrc)}\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel1bh-content\"\n            id=\"panel1bh-header\"\n            style={{ padding: \"0.5rem 1rem\" }}\n          >\n            <div className={styles.accHeader} >{accordion.header}</div>\n          </AccordionSummary>\n          <AccordionDetails style={{ display: \"flex\",alignItems: \"center\" }}>\n            <img className={styles.accImg} src={accordion.imgSrc} alt='img'/>\n            <div className={styles.accDescription}>{accordion.description}</div>\n          </AccordionDetails>\n        </Accordion>\n      );\n    });\n    content.push(\n      <div className={styles.content}>\n        <div className={styles.accBox}>\n          {accordions}\n        </div>\n        <div className={styles.imgBox}>\n          <img className={styles.contentImg} src={imgSrc} alt='img-box'/>\n        </div>\n      </div>\n    );\n    return content;\n  };\n\n  return(\n    <div className={styles.main}>{renderAccordions()}</div>\n  );\n};\nexport default LAccordion;\n"]},"metadata":{},"sourceType":"module"}