{"ast":null,"code":"var _jsxFileName = \"/Users/personal/codebase/bhyve/frontend/src/components/base/SkillsSelector.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { SkillsContext } from \"../../hooks/SkillsContext\";\nimport styles from \"../../assets/scss/base/skillsSelector.module.scss\";\nimport { Chip, Paper } from \"@material-ui/core\";\nimport skillsServices from \"../../services/skillsServices\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SkillsSelector = () => {\n  _s();\n\n  const [skills, setSkills] = useState([]);\n  const [skillsP, setSkillsP] = useState([]);\n  const [pageNumber, setPageNumber] = useState(2);\n  const selectedSkills = useContext(SkillsContext);\n\n  const handleDelete = chipToDelete => () => {\n    selectedSkills[1](chips => chips.filter(chip => chip.key !== chipToDelete.key));\n  };\n\n  useEffect(() => {\n    skillsServices.getSkills().then(res => {\n      console.log(res.data);\n      setSkills(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n\n  const renderSelectedSkills = () => {\n    return /*#__PURE__*/_jsxDEV(Paper, {\n      component: \"ul\",\n      className: styles.root,\n      children: selectedSkills[0].map(data => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Chip, {\n            label: data.label,\n            onDelete: data.label === \"React\" ? undefined : handleDelete(data)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this)\n        }, data.key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  };\n\n  const renderSkills = () => {\n    let skillsShownData = skills.slice((pageNumber - 1) * 10, pageNumber * 10);\n    let skillsShown = [];\n    skillsShownData.map(skill => {\n      const skillsSelector = () => {\n        let rawSkill;\n        let rawSkillP;\n\n        if (skillsP.length < 8 && !skillsP.includes(skill.skillName)) {\n          rawSkill = [...selectedSkills[0], {\n            key: skill.id,\n            label: skill.skillName\n          }];\n          rawSkillP = [...skillsP, skill.skillName];\n          setSkillsP(rawSkillP);\n          selectedSkills[1](rawSkill);\n        } else {\n          console.log(\"no more\");\n          return;\n        }\n      };\n\n      skillsShown.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: skillsSelector,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: skill.skillName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, skill.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this));\n    });\n    return skillsShown;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: renderSelectedSkills()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: renderSkills()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SkillsSelector, \"ZzimmHSMAZTCjZIotHVy8OsYxgk=\");\n\n_c = SkillsSelector;\nexport default SkillsSelector;\n\nvar _c;\n\n$RefreshReg$(_c, \"SkillsSelector\");","map":{"version":3,"sources":["/Users/personal/codebase/bhyve/frontend/src/components/base/SkillsSelector.tsx"],"names":["React","useContext","useEffect","useState","SkillsContext","styles","Chip","Paper","skillsServices","SkillsSelector","skills","setSkills","skillsP","setSkillsP","pageNumber","setPageNumber","selectedSkills","handleDelete","chipToDelete","chips","filter","chip","key","getSkills","then","res","console","log","data","catch","err","renderSelectedSkills","root","map","label","undefined","renderSkills","skillsShownData","slice","skillsShown","skill","skillsSelector","rawSkill","rawSkillP","length","includes","skillName","id","push"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport { SkillsContext } from \"../../hooks/SkillsContext\";\nimport styles from \"../../assets/scss/base/skillsSelector.module.scss\";\nimport { Chip, Paper } from \"@material-ui/core\";\nimport skillsServices from \"../../services/skillsServices\";\nimport { Pagination } from \"reactstrap\";\n\ninterface ChipData {\n    key: number;\n    label: string;\n}\nconst SkillsSelector = ()=>{\n  const [skills,setSkills] = useState<any[]>([]);\n  const [skillsP,setSkillsP] = useState<any[]>([]);\n  const [pageNumber,setPageNumber] = useState(2);\n  const selectedSkills = useContext(SkillsContext);\n\n  const handleDelete = (chipToDelete: ChipData ) => () => {\n    selectedSkills[1]((chips) => chips.filter((chip) => chip.key !== chipToDelete.key));\n  };\n\n  useEffect(()=>{\n    skillsServices.getSkills()\n      .then((res)=>{\n        console.log(res.data);\n        setSkills(res.data);\n      })\n      .catch((err)=>{\n        console.log(err);\n      });\n  },[]);\n\n  const renderSelectedSkills = ()=>{\n    return(\n      <Paper component=\"ul\" className={styles.root}>\n        {selectedSkills[0].map((data) => {\n          return (\n            <li key={data.key}>\n              <Chip\n                label={data.label}\n                onDelete={data.label === \"React\" ? undefined : handleDelete(data)}\n              />\n            </li>\n          );\n        })}\n      </Paper>\n    );\n  };\n\n  const renderSkills = ()=>{\n    let skillsShownData = skills.slice((pageNumber - 1) * 10,pageNumber * 10);\n    let skillsShown:any = [];\n    skillsShownData.map((skill)=>{\n      const skillsSelector = ()=>{\n        let rawSkill;\n        let rawSkillP;\n        if(skillsP.length < 8 && !skillsP.includes(skill.skillName)){\n          rawSkill = [...selectedSkills[0],{ key: skill.id,label: skill.skillName }];\n          rawSkillP = [...skillsP,skill.skillName];\n          setSkillsP(rawSkillP);\n          selectedSkills[1](rawSkill);\n        }\n        else{\n          console.log(\"no more\");\n          return;\n        }\n      };\n      skillsShown.push(\n        <div key={skill.id}\n          onClick={skillsSelector}>\n          <span>\n            {skill.skillName}\n          </span>\n        </div>);\n    });\n    return skillsShown;\n  };\n\n  return(\n    <div>\n      <div>{renderSelectedSkills()}</div>\n      <div>\n        {renderSkills()}\n      </div>\n    </div>\n  );\n};\nexport default SkillsSelector;\n"]},"metadata":{},"sourceType":"module"}